"use strict";(self.webpackChunkredacted=self.webpackChunkredacted||[]).push([[804],{2049:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"how_it_works","title":"How It Works","description":"The logic behind @redacted is pretty straightforward: suppose we have a case class like this","source":"@site/docs/how_it_works.md","sourceDirName":".","slug":"/how_it_works","permalink":"/redacted/docs/how_it_works","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"How It Works","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Usage","permalink":"/redacted/docs/usage"}}');var r=n(4848),i=n(8453);const a={title:"How It Works",sidebar_position:3},o=void 0,c={},d=[];function l(e){const t={a:"a",code:"code",em:"em",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The logic behind ",(0,r.jsx)(t.code,{children:"@redacted"})," is pretty straightforward: suppose we have a case class like this"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",metastring:'title="User.scala"',children:"case class User(id: Long, nick: String, @redacted email: String, login: LocalDateTime, @redacted age: Int)\n"})}),"\n",(0,r.jsx)(t.p,{children:"redacted compiler plugin will modify the case class definition as such"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",metastring:'title="User.scala"',children:'case class User(id: Long, nick: String, @redacted email: String, login: LocalDateTime, @redacted age: Int) {\n  override def toString: String =\n    "User(" + this.id + "," + this.nick + "," + "***" + "," + this.login + "," + "***" + ")"\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["In other words: the content of the variables annotated with ",(0,r.jsx)(t.code,{children:"@redacted"})," won't change at all, and will be still\naccessible whenever you'll access them ","\ud83d\ude09"]}),"\n",(0,r.jsxs)(t.p,{children:["Furthermore, redacted compiler plugin will change only case classes that contain ",(0,r.jsx)(t.em,{children:"at least"})," one field marked with\n",(0,r.jsx)(t.code,{children:"@redacted"})," annotation, skipping entirely the ones that don't have it."]}),"\n",(0,r.jsxs)(t.p,{children:["If you're curious about how the compiler plugin is structured and works, feel free to have a look at the ",(0,r.jsx)(t.a,{href:"/development",children:"Development guide"})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(6540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);